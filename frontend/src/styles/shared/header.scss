// Workaround due to VSCode extensions not supporting
// correct Intellisense for variables imported though @use
@forward '_normalize';
@forward '_colors';
@forward '_typography';
@use '_colors' as *;

header {
  position: fixed; /* Stay in place */
  display: flex;
  justify-content: center;
  width: 100%;
  height: 60px;
  background: $color-primary-2;
  color: $color-secondary-2;
}

.header__contents {
  display: flex;
  align-items: center;
  height: 100%;
  padding: 0 10px;
  width: 100%;
  max-width: 1920px;
  gap: 10px;

  > button {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.logo {
  height: 30px;
  flex-grow: 1;

  img {
    height: 100%;
  }
}

nav, .header__contents > button, nav .dropdown_button, nav svg {
  font-size: 20px;
  color: $color-secondary-2;
  fill: $color-secondary-2;
}

nav {
  height: 100%;
  display: flex;
  width: 0;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  background-color: opacity-set($color-primary-2, 0.95);
  overflow: hidden;
  transition: 0.5s;

  > :first-child {
    flex-grow: 4;
    flex-shrink: 0;

    > :first-child {
      height: 40px;

      .logo {
        height: 100%;
      }
    }

    > :nth-child(2) {
      padding-top: 10px;
    }
  }

  > :last-child {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    cursor: pointer;
  }
}

nav > ul {
  background-color: $color-primary-2;
  overflow-y: auto;
  padding-top: 10px;

  li:hover, a:hover {
    background-color: lightness-add($color-primary-2, 10%);
  }
}

nav a {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 5px 20px;

  &:hover {
    color: $color-primary-1;

    svg {
      fill: $color-primary-1;
    }
  }
}
// nav a:hover {
//   color: $color-primary-1;
//   fill: $color-primary-1;
// }
nav .close_button {
  font-size: 50px;
  line-height: 50%;
  padding: 30px
}

nav .dropdown__submenu {
  font-size: 16px;

  > li {
    padding-left: 35px;
  }
}

@keyframes nudge {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(10px); /* Adjust distance */
    color: lightness-add($color-secondary-2, -50%);
  }
  100% {
    transform: translateX(0);
  }
}

ul.show-list li {
  animation: nudge 0.3s forwards ease-in-out; /* Duration of animation */
  // animation-delay: var(--delay); /* Use custom delay for each item */
}

@media (min-width: 900px) {
  nav, .header__contents > button, nav .dropdown_button, nav svg {
    font-size: 18px;
}

  header {
    height: 100px;
  }

  .header__contents {
    padding: 0 20px;

    > :nth-child(2) {
      height: 50px;
    }
  }

  nav {
    width: fit-content;
    position: static;
    text-transform: uppercase;
    overflow: visible;

    > ul {
      display: flex;
      align-items: center;
      flex-grow: 0;
      overflow: visible;

      > li {
        height: 100%;
        display: inline-flex;
        flex-direction: column;
        justify-content: center;
        // background-color: red;
      }
    }

    .dropdown__submenu {
      position: absolute;
      max-height: 0;
      overflow: hidden;
      min-width: 250px;
      z-index: 1;
      top: 100px;
      background-color: lightness-add($color-primary-2, 10%);
      // display: none;

      li {
        padding: 0;
      }

      a:hover {
        background-color: $color-primary-2;
        // background-color: red !important;
      }
    }

    > ul, > :first-child > :nth-child(2) {
      padding-top: 0;
    }
  }
}